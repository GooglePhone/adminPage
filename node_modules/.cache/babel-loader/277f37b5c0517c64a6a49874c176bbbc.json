{"ast":null,"code":"import { store } from './store';\nimport SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from 'webstomp-client'; // const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\n\nexport const websocket = {\n  data() {\n    return {\n      ws: null\n    };\n  },\n\n  created() {\n    //頁面剛進入時開啟長連線\n    this.methods.initWebsocket();\n  },\n\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose();\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      this.socket = new SockJS('http://localhost:8080/ws');\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(frame => {\n        // 连接成功： 订阅服务器的地址。为了浏览器可以接收到消息，必须先订阅服务器的地址\n        console.log(123); //   this.stompClient.subscribe('/topic/updateService', function (data) {\n        //     console.log(data);\n        // });\n\n        this.stompClient.subscribe('/topic/bind', function (data) {\n          console.log(data);\n        });\n        this.stompClient.subscribe('/user/client/bind', function (data) {\n          console.log(data);\n        });\n        this.stompClient.send('/app/testMsg', {}, JSON.stringify({\n          clientId: 'jjj'\n        })); //   this.connectSucceed()\n      }); // this.stompClient.send(\"/client/bind\", {}, JSON.stringify({'clientId': \"jjj\"}));\n      // this.stompClient.subscribe('/client/bind/fff', function (greeting) {\n      //     console.log(greeting)\n      //     // showGreeting(JSON.parse(greeting.body).content);\n      // });\n      // this.ws = new WebSocket(socket); //建立連線\n      // this.ws.onopen = this.websocketonopen;\n      // this.ws.error = this.websocketonerror;\n      // this.ws.onmessage = this.websocketonmessage;\n      // this.ws.onclose = this.websocketclose;\n    },\n\n    websocketonopen() {\n      console.log('ws 連線成功~~');\n    },\n\n    websocketonerror(e) {\n      console.error('ws 連線失敗', e);\n    },\n\n    websocketonmessage(e) {\n      console.log(e.data);\n      store.currentOrder.push(e.data); // 後端通知前端，前端取得資料\n      // let _data = e.data;\n      // //當有後端資料送到前端，利用vuex存到共用的state\n      // this.setWsNotify({\n      //     id:uuid.v4(),\n      //     data: JSON.parse(_data)\n      // });\n\n      return e;\n    },\n\n    websocketsend(data, topic = '/submitOrder') {\n      this.stompClient.send('/app' + topic, data); //前端丟資料\n\n      console.log('send data', data);\n    },\n\n    websocketclose() {\n      console.log('ws 關閉連線');\n    }\n\n  }\n};","map":{"version":3,"names":["store","SockJS","Stomp","websocket","data","ws","created","methods","initWebsocket","destroyed","websocketclose","socket","stompClient","over","connect","frame","console","log","subscribe","send","JSON","stringify","clientId","websocketonopen","websocketonerror","e","error","websocketonmessage","currentOrder","push","websocketsend","topic"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/websocket.js"],"sourcesContent":["import { store } from './store'\nimport SockJS from 'sockjs-client/dist/sockjs.min.js'\nimport Stomp from 'webstomp-client'\n// const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\nexport const websocket = {\n  data() {\n    return {\n      ws: null,\n    }\n  },\n  created() {\n    //頁面剛進入時開啟長連線\n    this.methods.initWebsocket()\n  },\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose()\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      this.socket = new SockJS('http://localhost:8080/ws')\n      this.stompClient = Stomp.over(this.socket)\n      this.stompClient.connect(\n        (frame) => {\n          // 连接成功： 订阅服务器的地址。为了浏览器可以接收到消息，必须先订阅服务器的地址\n          console.log(123)\n          //   this.stompClient.subscribe('/topic/updateService', function (data) {\n          //     console.log(data);\n          // });\n          this.stompClient.subscribe('/topic/bind', function (data) {\n            console.log(data)\n          })\n          this.stompClient.subscribe('/user/client/bind', function (data) {\n            console.log(data)\n          })\n          this.stompClient.send(\n            '/app/testMsg',\n            {},\n            JSON.stringify({ clientId: 'jjj' }),\n          )\n          //   this.connectSucceed()\n        }\n      )\n      // this.stompClient.send(\"/client/bind\", {}, JSON.stringify({'clientId': \"jjj\"}));\n      // this.stompClient.subscribe('/client/bind/fff', function (greeting) {\n      //     console.log(greeting)\n      //     // showGreeting(JSON.parse(greeting.body).content);\n      // });\n      // this.ws = new WebSocket(socket); //建立連線\n      // this.ws.onopen = this.websocketonopen;\n      // this.ws.error = this.websocketonerror;\n      // this.ws.onmessage = this.websocketonmessage;\n      // this.ws.onclose = this.websocketclose;\n    },\n    websocketonopen() {\n      console.log('ws 連線成功~~')\n    },\n    websocketonerror(e) {\n      console.error('ws 連線失敗', e)\n    },\n    websocketonmessage(e) {\n      console.log(e.data)\n      store.currentOrder.push(e.data)\n      // 後端通知前端，前端取得資料\n      // let _data = e.data;\n      // //當有後端資料送到前端，利用vuex存到共用的state\n      // this.setWsNotify({\n      //     id:uuid.v4(),\n      //     data: JSON.parse(_data)\n      // });\n      return e\n    },\n    websocketsend(data, topic = '/submitOrder') {\n      this.stompClient.send('/app' + topic, data)\n      //前端丟資料\n      console.log('send data', data)\n    },\n    websocketclose() {\n      console.log('ws 關閉連線')\n    },\n  },\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,GAAG;IACL,OAAO;MACLC,EAAE,EAAE;IADC,CAAP;EAGD,CALsB;;EAMvBC,OAAO,GAAG;IACR;IACA,KAAKC,OAAL,CAAaC,aAAb;EACD,CATsB;;EAUvBC,SAAS,EAAE,YAAY;IACrB;IACA,KAAKC,cAAL;EACD,CAbsB;EAcvBH,OAAO,EAAE;IACP;IACAC,aAAa,GAAG;MACd,KAAKG,MAAL,GAAc,IAAIV,MAAJ,CAAW,0BAAX,CAAd;MACA,KAAKW,WAAL,GAAmBV,KAAK,CAACW,IAAN,CAAW,KAAKF,MAAhB,CAAnB;MACA,KAAKC,WAAL,CAAiBE,OAAjB,CACGC,KAAD,IAAW;QACT;QACAC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAFS,CAGT;QACA;QACA;;QACA,KAAKL,WAAL,CAAiBM,SAAjB,CAA2B,aAA3B,EAA0C,UAAUd,IAAV,EAAgB;UACxDY,OAAO,CAACC,GAAR,CAAYb,IAAZ;QACD,CAFD;QAGA,KAAKQ,WAAL,CAAiBM,SAAjB,CAA2B,mBAA3B,EAAgD,UAAUd,IAAV,EAAgB;UAC9DY,OAAO,CAACC,GAAR,CAAYb,IAAZ;QACD,CAFD;QAGA,KAAKQ,WAAL,CAAiBO,IAAjB,CACE,cADF,EAEE,EAFF,EAGEC,IAAI,CAACC,SAAL,CAAe;UAAEC,QAAQ,EAAE;QAAZ,CAAf,CAHF,EAZS,CAiBT;MACD,CAnBH,EAHc,CAwBd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CApCM;;IAqCPC,eAAe,GAAG;MAChBP,OAAO,CAACC,GAAR,CAAY,WAAZ;IACD,CAvCM;;IAwCPO,gBAAgB,CAACC,CAAD,EAAI;MAClBT,OAAO,CAACU,KAAR,CAAc,SAAd,EAAyBD,CAAzB;IACD,CA1CM;;IA2CPE,kBAAkB,CAACF,CAAD,EAAI;MACpBT,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACrB,IAAd;MACAJ,KAAK,CAAC4B,YAAN,CAAmBC,IAAnB,CAAwBJ,CAAC,CAACrB,IAA1B,EAFoB,CAGpB;MACA;MACA;MACA;MACA;MACA;MACA;;MACA,OAAOqB,CAAP;IACD,CAtDM;;IAuDPK,aAAa,CAAC1B,IAAD,EAAO2B,KAAK,GAAG,cAAf,EAA+B;MAC1C,KAAKnB,WAAL,CAAiBO,IAAjB,CAAsB,SAASY,KAA/B,EAAsC3B,IAAtC,EAD0C,CAE1C;;MACAY,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBb,IAAzB;IACD,CA3DM;;IA4DPM,cAAc,GAAG;MACfM,OAAO,CAACC,GAAR,CAAY,SAAZ;IACD;;EA9DM;AAdc,CAAlB"},"metadata":{},"sourceType":"module"}