{"ast":null,"code":"import SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from 'webstomp-client';\nimport { wsStore } from './wsStore'; // const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\n\nexport const websocket = {\n  data() {\n    return {\n      ws: null\n    };\n  },\n\n  created() {\n    //頁面剛進入時開啟長連線\n    this.initWebsocket();\n  },\n\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose();\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      this.socket = new SockJS('http://localhost:8080/ws');\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect( // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n      header => {\n        header;\n      }, frame => {\n        websocket.data().ws = this;\n        console.log(frame);\n        this.stompClient.subscribe('/topic/bind', function (data) {\n          let orderList = [];\n\n          if (wsStore.currentOrder.value !== undefined) {\n            orderList = wsStore.currentOrder.value.data;\n          }\n\n          const currentData = JSON.parse(data.body);\n          let exists = false;\n          orderList.forEach(element => {\n            if (element.orderId === currentData.orderId) {\n              element.data.concat(currentData.data);\n              exists = true;\n            }\n          });\n\n          if (!exists) {\n            orderList.push(currentData);\n          }\n\n          wsStore.currentOrder.value = orderList;\n          console.log(wsStore.currentOrder.value); // console.log('ddd' + data)\n        });\n        this.stompClient.send('/app/testMsg', {}, JSON.stringify({\n          clientId: 'jjj'\n        })); //   this.connectSucceed()\n      }, err => {\n        this.initWebsocket; // 连接失败的回调\n\n        console.log(err); //   this.reconnect(this.socketUrl, this.connectSucceed)\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","wsStore","websocket","data","ws","created","initWebsocket","destroyed","websocketclose","methods","socket","stompClient","over","connect","header","frame","console","log","subscribe","orderList","currentOrder","value","undefined","currentData","JSON","parse","body","exists","forEach","element","orderId","concat","push","send","stringify","clientId","err"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client/dist/sockjs.min.js'\nimport Stomp from 'webstomp-client'\nimport { wsStore } from './wsStore'\n// const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\nexport const websocket = {\n  data() {\n    return {\n      ws: null,\n    }\n  },\n  created() {\n    //頁面剛進入時開啟長連線\n    this.initWebsocket()\n  },\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose()\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      this.socket = new SockJS('http://localhost:8080/ws')\n      this.stompClient = Stomp.over(this.socket)\n      this.stompClient.connect(\n        // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n        (header) => {\n          header\n        },\n        (frame) => {\n          websocket.data().ws = this\n          console.log(frame)\n          this.stompClient.subscribe('/topic/bind', function (data) {\n            let orderList = []\n            if (wsStore.currentOrder.value !== undefined) {\n              orderList = wsStore.currentOrder.value.data\n            }\n            const currentData = JSON.parse(data.body)\n            let exists = false\n            orderList.forEach((element) => {\n              if (element.orderId === currentData.orderId) {\n                element.data.concat(currentData.data)\n                exists = true\n              }\n            })\n            if (!exists) {\n              orderList.push(currentData)\n            }\n            wsStore.currentOrder.value = orderList\n            console.log(wsStore.currentOrder.value)\n            // console.log('ddd' + data)\n          })\n          this.stompClient.send(\n            '/app/testMsg',\n            {},\n            JSON.stringify({ clientId: 'jjj' }),\n          )\n          //   this.connectSucceed()\n        },\n        (err) => {\n          this.initWebsocket\n          // 连接失败的回调\n          console.log(err)\n          //   this.reconnect(this.socketUrl, this.connectSucceed)\n        },\n      )\n    },\n  },\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,GAAG;IACL,OAAO;MACLC,EAAE,EAAE;IADC,CAAP;EAGD,CALsB;;EAMvBC,OAAO,GAAG;IACR;IACA,KAAKC,aAAL;EACD,CATsB;;EAUvBC,SAAS,EAAE,YAAY;IACrB;IACA,KAAKC,cAAL;EACD,CAbsB;EAcvBC,OAAO,EAAE;IACP;IACAH,aAAa,GAAG;MACd,KAAKI,MAAL,GAAc,IAAIX,MAAJ,CAAW,0BAAX,CAAd;MACA,KAAKY,WAAL,GAAmBX,KAAK,CAACY,IAAN,CAAW,KAAKF,MAAhB,CAAnB;MACA,KAAKC,WAAL,CAAiBE,OAAjB,EACE;MACCC,MAAD,IAAY;QACVA,MAAM;MACP,CAJH,EAKGC,KAAD,IAAW;QACTb,SAAS,CAACC,IAAV,GAAiBC,EAAjB,GAAsB,IAAtB;QACAY,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,KAAKJ,WAAL,CAAiBO,SAAjB,CAA2B,aAA3B,EAA0C,UAAUf,IAAV,EAAgB;UACxD,IAAIgB,SAAS,GAAG,EAAhB;;UACA,IAAIlB,OAAO,CAACmB,YAAR,CAAqBC,KAArB,KAA+BC,SAAnC,EAA8C;YAC5CH,SAAS,GAAGlB,OAAO,CAACmB,YAAR,CAAqBC,KAArB,CAA2BlB,IAAvC;UACD;;UACD,MAAMoB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWtB,IAAI,CAACuB,IAAhB,CAApB;UACA,IAAIC,MAAM,GAAG,KAAb;UACAR,SAAS,CAACS,OAAV,CAAmBC,OAAD,IAAa;YAC7B,IAAIA,OAAO,CAACC,OAAR,KAAoBP,WAAW,CAACO,OAApC,EAA6C;cAC3CD,OAAO,CAAC1B,IAAR,CAAa4B,MAAb,CAAoBR,WAAW,CAACpB,IAAhC;cACAwB,MAAM,GAAG,IAAT;YACD;UACF,CALD;;UAMA,IAAI,CAACA,MAAL,EAAa;YACXR,SAAS,CAACa,IAAV,CAAeT,WAAf;UACD;;UACDtB,OAAO,CAACmB,YAAR,CAAqBC,KAArB,GAA6BF,SAA7B;UACAH,OAAO,CAACC,GAAR,CAAYhB,OAAO,CAACmB,YAAR,CAAqBC,KAAjC,EAjBwD,CAkBxD;QACD,CAnBD;QAoBA,KAAKV,WAAL,CAAiBsB,IAAjB,CACE,cADF,EAEE,EAFF,EAGET,IAAI,CAACU,SAAL,CAAe;UAAEC,QAAQ,EAAE;QAAZ,CAAf,CAHF,EAvBS,CA4BT;MACD,CAlCH,EAmCGC,GAAD,IAAS;QACP,KAAK9B,aAAL,CADO,CAEP;;QACAU,OAAO,CAACC,GAAR,CAAYmB,GAAZ,EAHO,CAIP;MACD,CAxCH;IA0CD;;EA/CM;AAdc,CAAlB"},"metadata":{},"sourceType":"module"}