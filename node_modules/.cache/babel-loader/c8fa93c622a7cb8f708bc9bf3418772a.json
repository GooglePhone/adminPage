{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CBreadcrumbItem = _resolveComponent(\"CBreadcrumbItem\");\n\n  const _component_CBreadcrumb = _resolveComponent(\"CBreadcrumb\");\n\n  return _openBlock(), _createBlock(_component_CBreadcrumb, {\n    class: \"d-md-down-none me-auto mb-0\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.breadcrumbs, item => {\n      return _openBlock(), _createBlock(_component_CBreadcrumbItem, {\n        key: item,\n        href: item.active ? '' : item.path,\n        active: item.active\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1)]),\n        _: 2\n      }, 1032, [\"href\", \"active\"]);\n    }), 128))]),\n    _: 1\n  });\n}","map":{"version":3,"mappings":";;;;;;uBACEA,aAScC,sBATd,EASc;IATDC,KAAK,EAAC;EASL,CATd,EAAgD;sBAE5C,MAA2B,oBAD7BC,oBAOkBC,SAPlB,EAOkB,IAPlB,EAOkBC,YANDC,kBAMC,EANTC,IAAmB,IAAf;2BADbP,aAOkBQ,0BAPlB,EAOkB;QALfC,GAAG,EAAEF,IAKU;QAJfG,IAAI,EAAEH,IAAI,CAACI,MAAL,GAAW,EAAX,GAAmBJ,IAAI,CAACK,IAIf;QAHfD,MAAM,EAAEJ,IAAI,CAACI;MAGE,CAPlB;0BAME,MAAe,mCAAZJ,IAAI,CAACM,OAAI,EAAG;;OANjB;KAOkB,CAPlB,MAC6B,GAFiB;;EAAA,CAAhD","names":["_createBlock","_component_CBreadcrumb","class","_createElementBlock","_Fragment","_renderList","$setup","item","_component_CBreadcrumbItem","key","href","active","path","name"],"sourceRoot":"","sources":["C:\\Users\\user\\Documents\\GitHub\\adminPage\\src\\components\\AppBreadcrumb.vue"],"sourcesContent":["<template>\n  <CBreadcrumb class=\"d-md-down-none me-auto mb-0\">\n    <CBreadcrumbItem\n      v-for=\"item in breadcrumbs\"\n      :key=\"item\"\n      :href=\"item.active ? '' : item.path\"\n      :active=\"item.active\"\n    >\n      {{ item.name }}\n    </CBreadcrumbItem>\n  </CBreadcrumb>\n</template>\n\n<script>\nimport { onMounted, ref } from 'vue'\nimport router from '@/router'\n\nexport default {\n  name: 'AppBreadcrumb',\n  setup() {\n    const breadcrumbs = ref()\n\n    const getBreadcrumbs = () => {\n      return router.currentRoute.value.matched.map((route) => {\n        return {\n          active: route.path === router.currentRoute.value.fullPath,\n          name: route.name,\n          path: `${router.options.history.base}${route.path}`,\n        }\n      })\n    }\n\n    router.afterEach(() => {\n      breadcrumbs.value = getBreadcrumbs()\n    })\n\n    onMounted(() => {\n      breadcrumbs.value = getBreadcrumbs()\n    })\n\n    return {\n      breadcrumbs,\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}