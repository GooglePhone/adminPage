{"ast":null,"code":"import SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from 'webstomp-client';\nimport { useStore } from 'vuex'; // const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\n\nexport const websocket = {\n  data() {\n    return {\n      ws: null\n    };\n  },\n\n  created() {\n    //頁面剛進入時開啟長連線\n    this.initWebsocket();\n  },\n\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose();\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      const store = useStore();\n      this.socket = new SockJS('http://localhost:8080/ws');\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect( // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n      header => {\n        header;\n      }, frame => {\n        websocket.data().ws = this;\n        console.log(frame);\n        this.stompClient.subscribe('/admin/bind', function (data) {\n          console.log(store);\n          let orderList = JSON.parse(JSON.stringify(store.state.currencyOrder));\n          const currentData = JSON.parse(data.body);\n          let exists = false; // orderList.forEach((element) => {\n          //   if (element.orderId === currentData.orderId) {\n          //     element.data = element.data.concat(currentData.data)\n          //     exists = true\n          //   }\n          // })\n\n          if (!exists) {\n            orderList.push(currentData);\n          }\n\n          store.commit('updateCurrencyOrder', orderList);\n          console.log(JSON.parse(JSON.stringify(store.state.currencyOrder))); // console.log('ddd' + data)\n        }); //   this.connectSucceed()\n      }, err => {\n        this.initWebsocket; // 连接失败的回调\n\n        console.log(err); //   this.reconnect(this.socketUrl, this.connectSucceed)\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","useStore","websocket","data","ws","created","initWebsocket","destroyed","websocketclose","methods","store","socket","stompClient","over","connect","header","frame","console","log","subscribe","orderList","JSON","parse","stringify","state","currencyOrder","currentData","body","exists","push","commit","err"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client/dist/sockjs.min.js'\nimport Stomp from 'webstomp-client'\nimport { useStore } from 'vuex'\n// const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n// const websocketUrl = `ws://127.0.0.1:8080/`\nexport const websocket = {\n  data() {\n    return {\n      ws: null,\n    }\n  },\n  created() {\n    //頁面剛進入時開啟長連線\n    this.initWebsocket()\n  },\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose()\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      const store = useStore()\n      this.socket = new SockJS('http://localhost:8080/ws')\n      this.stompClient = Stomp.over(this.socket)\n      this.stompClient.connect(\n        // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n        (header) => {\n          header\n        },\n        (frame) => {\n          websocket.data().ws = this\n          console.log(frame)\n          this.stompClient.subscribe('/admin/bind', function (data) {\n            console.log(store)\n            let orderList = JSON.parse(\n              JSON.stringify(store.state.currencyOrder),\n            )\n            const currentData = JSON.parse(data.body)\n            let exists = false\n            // orderList.forEach((element) => {\n            //   if (element.orderId === currentData.orderId) {\n            //     element.data = element.data.concat(currentData.data)\n            //     exists = true\n            //   }\n            // })\n            if (!exists) {\n              orderList.push(currentData)\n            }\n            store.commit('updateCurrencyOrder', orderList)\n            console.log(JSON.parse(JSON.stringify(store.state.currencyOrder)))\n            // console.log('ddd' + data)\n          })\n          //   this.connectSucceed()\n        },\n        (err) => {\n          this.initWebsocket\n          // 连接失败的回调\n          console.log(err)\n          //   this.reconnect(this.socketUrl, this.connectSucceed)\n        },\n      )\n    },\n  },\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB,C,CACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,GAAG;IACL,OAAO;MACLC,EAAE,EAAE;IADC,CAAP;EAGD,CALsB;;EAMvBC,OAAO,GAAG;IACR;IACA,KAAKC,aAAL;EACD,CATsB;;EAUvBC,SAAS,EAAE,YAAY;IACrB;IACA,KAAKC,cAAL;EACD,CAbsB;EAcvBC,OAAO,EAAE;IACP;IACAH,aAAa,GAAG;MACd,MAAMI,KAAK,GAAGT,QAAQ,EAAtB;MACA,KAAKU,MAAL,GAAc,IAAIZ,MAAJ,CAAW,0BAAX,CAAd;MACA,KAAKa,WAAL,GAAmBZ,KAAK,CAACa,IAAN,CAAW,KAAKF,MAAhB,CAAnB;MACA,KAAKC,WAAL,CAAiBE,OAAjB,EACE;MACCC,MAAD,IAAY;QACVA,MAAM;MACP,CAJH,EAKGC,KAAD,IAAW;QACTd,SAAS,CAACC,IAAV,GAAiBC,EAAjB,GAAsB,IAAtB;QACAa,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,KAAKJ,WAAL,CAAiBO,SAAjB,CAA2B,aAA3B,EAA0C,UAAUhB,IAAV,EAAgB;UACxDc,OAAO,CAACC,GAAR,CAAYR,KAAZ;UACA,IAAIU,SAAS,GAAGC,IAAI,CAACC,KAAL,CACdD,IAAI,CAACE,SAAL,CAAeb,KAAK,CAACc,KAAN,CAAYC,aAA3B,CADc,CAAhB;UAGA,MAAMC,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWnB,IAAI,CAACwB,IAAhB,CAApB;UACA,IAAIC,MAAM,GAAG,KAAb,CANwD,CAOxD;UACA;UACA;UACA;UACA;UACA;;UACA,IAAI,CAACA,MAAL,EAAa;YACXR,SAAS,CAACS,IAAV,CAAeH,WAAf;UACD;;UACDhB,KAAK,CAACoB,MAAN,CAAa,qBAAb,EAAoCV,SAApC;UACAH,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,KAAK,CAACc,KAAN,CAAYC,aAA3B,CAAX,CAAZ,EAjBwD,CAkBxD;QACD,CAnBD,EAHS,CAuBT;MACD,CA7BH,EA8BGM,GAAD,IAAS;QACP,KAAKzB,aAAL,CADO,CAEP;;QACAW,OAAO,CAACC,GAAR,CAAYa,GAAZ,EAHO,CAIP;MACD,CAnCH;IAqCD;;EA3CM;AAdc,CAAlB"},"metadata":{},"sourceType":"module"}