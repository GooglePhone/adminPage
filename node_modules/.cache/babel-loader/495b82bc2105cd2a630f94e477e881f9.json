{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"訂單編號 \");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"訂單內容\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"價錢\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"時間\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"狀態\");\n\nconst _hoisted_6 = {\n  class: \"clearfix\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", null, \"已結帳\", -1);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\"\n}, \"«\", -1);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\"\n}, \"<\", -1);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\"\n}, \">\", -1);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\"\n}, \"»\", -1);\n\nimport { api } from '../apiRequset.js';\nimport { ref } from 'vue';\nexport default {\n  __name: 'OrderHistory',\n\n  setup(__props) {\n    const list = ref(null);\n    const currentPage = ref(1);\n    const totalPage = ref(0);\n    const size = ref(5);\n    search(currentPage.value);\n\n    function search(page) {\n      currentPage.value = page;\n      api.getHistory({\n        page: currentPage.value,\n        size: size.value\n      }).then(response => {\n        list.value = response.data.data;\n        currentPage.value = response.data.page;\n        totalPage.value = response.data.toatl / size.value;\n      });\n    }\n\n    return (_ctx, _cache) => {\n      const _component_CIcon = _resolveComponent(\"CIcon\");\n\n      const _component_CTableHeaderCell = _resolveComponent(\"CTableHeaderCell\");\n\n      const _component_CTableRow = _resolveComponent(\"CTableRow\");\n\n      const _component_CTableHead = _resolveComponent(\"CTableHead\");\n\n      const _component_CTableDataCell = _resolveComponent(\"CTableDataCell\");\n\n      const _component_CTableBody = _resolveComponent(\"CTableBody\");\n\n      const _component_CTable = _resolveComponent(\"CTable\");\n\n      const _component_CForm = _resolveComponent(\"CForm\");\n\n      const _component_CPaginationItem = _resolveComponent(\"CPaginationItem\");\n\n      const _component_CPagination = _resolveComponent(\"CPagination\");\n\n      return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_CForm, null, {\n        default: _withCtx(() => [_createVNode(_component_CTable, {\n          align: \"middle\",\n          class: \"mb-0 border\",\n          hover: \"\",\n          responsive: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_CTableHead, {\n            color: \"light\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_CTableRow, null, {\n              default: _withCtx(() => [_createVNode(_component_CTableHeaderCell, {\n                class: \"text-center\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CIcon, {\n                  name: \"cil-basket\"\n                }), _hoisted_1]),\n                _: 1\n              }), _createVNode(_component_CTableHeaderCell, {\n                class: \"text-center\"\n              }, {\n                default: _withCtx(() => [_hoisted_2]),\n                _: 1\n              }), _createVNode(_component_CTableHeaderCell, {\n                class: \"text-center\"\n              }, {\n                default: _withCtx(() => [_hoisted_3]),\n                _: 1\n              }), _createVNode(_component_CTableHeaderCell, {\n                class: \"text-center\"\n              }, {\n                default: _withCtx(() => [_hoisted_4]),\n                _: 1\n              }), _createVNode(_component_CTableHeaderCell, null, {\n                default: _withCtx(() => [_hoisted_5]),\n                _: 1\n              })]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_CTableBody, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(list.value, item => {\n              return _openBlock(), _createBlock(_component_CTableRow, {\n                key: item.name\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CTableDataCell, {\n                  class: \"text-center\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.id), 1)]),\n                  _: 2\n                }, 1024), _createVNode(_component_CTableDataCell, {\n                  class: \"text-center\"\n                }, {\n                  default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(JSON.parse(item.content), dish => {\n                    return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString(dish.name) + \" x \" + _toDisplayString(dish.num) + \"   \", 1)], 64);\n                  }), 256))]),\n                  _: 2\n                }, 1024), _createVNode(_component_CTableDataCell, {\n                  class: \"text-center\"\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, _toDisplayString(item.totalPrice), 1)])]),\n                  _: 2\n                }, 1024), _createVNode(_component_CTableDataCell, {\n                  class: \"text-center\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.ctime), 1)]),\n                  _: 2\n                }, 1024), _createVNode(_component_CTableDataCell, null, {\n                  default: _withCtx(() => [_hoisted_7]),\n                  _: 1\n                })]),\n                _: 2\n              }, 1024);\n            }), 128)), _createVNode(_component_CTableRow)]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), list.value !== null ? (_openBlock(), _createBlock(_component_CPagination, {\n        key: 0,\n        \"aria-label\": \"Page navigation example\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CPaginationItem, {\n          \"aria-label\": \"Previous\",\n          disabled: _ctx.page == 1,\n          onClick: _cache[0] || (_cache[0] = $event => currentPage.value > 1 && search(1))\n        }, {\n          default: _withCtx(() => [_hoisted_8]),\n          _: 1\n        }, 8, [\"disabled\"]), _createVNode(_component_CPaginationItem, {\n          \"aria-label\": \"Previous\",\n          disabled: currentPage.value == 1,\n          onClick: _cache[1] || (_cache[1] = $event => currentPage.value > 1 && search(--currentPage.value))\n        }, {\n          default: _withCtx(() => [_hoisted_9]),\n          _: 1\n        }, 8, [\"disabled\"]), _createVNode(_component_CPaginationItem, {\n          active: \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(currentPage.value), 1)]),\n          _: 1\n        }), _createVNode(_component_CPaginationItem, {\n          \"aria-label\": \"Previous\",\n          disabled: currentPage.value < totalPage.value,\n          onClick: _cache[2] || (_cache[2] = $event => search(++currentPage.value))\n        }, {\n          default: _withCtx(() => [_hoisted_10]),\n          _: 1\n        }, 8, [\"disabled\"]), _createVNode(_component_CPaginationItem, {\n          \"aria-label\": \"Next\",\n          disabled: currentPage.value == totalPage.value,\n          onClick: _cache[3] || (_cache[3] = $event => search(totalPage.value))\n        }, {\n          default: _withCtx(() => [_hoisted_11]),\n          _: 1\n        }, 8, [\"disabled\"])]),\n        _: 1\n      })) : _createCommentVNode(\"\", true)]);\n    };\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,GAAT,QAAoB,KAApB;;;;;IACA,MAAMC,IAAI,GAAGD,GAAG,CAAC,IAAD,CAAhB;IACA,MAAME,WAAW,GAAGF,GAAG,CAAC,CAAD,CAAvB;IACA,MAAMG,SAAS,GAAGH,GAAG,CAAC,CAAD,CAArB;IACA,MAAMI,IAAI,GAAGJ,GAAG,CAAC,CAAD,CAAhB;IACAK,MAAM,CAACH,WAAW,CAACI,KAAb,CAAN;;IACA,SAASD,MAAT,CAAgBE,IAAhB,EAAsB;MACpBL,WAAW,CAACI,KAAZ,GAAoBC,IAApB;MACAR,GAAG,CACAS,UADH,CACc;QAAED,IAAI,EAAEL,WAAW,CAACI,KAApB;QAA2BF,IAAI,EAAEA,IAAI,CAACE;MAAtC,CADd,EAEGG,IAFH,CAESC,QAAD,IAAc;QAClBT,IAAI,CAACK,KAAL,GAAaI,QAAQ,CAACC,IAAT,CAAcA,IAA3B;QACAT,WAAW,CAACI,KAAZ,GAAoBI,QAAQ,CAACC,IAAT,CAAcJ,IAAlC;QACAJ,SAAS,CAACG,KAAV,GAAkBI,QAAQ,CAACC,IAAT,CAAcC,KAAd,GAAsBR,IAAI,CAACE,KAA7C;MACD,CANH;IAOD","names":["api","ref","list","currentPage","totalPage","size","search","value","page","getHistory","then","response","data","toatl"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/views/OrderHistory.vue"],"sourcesContent":["<template>\n  <div>\n    <CForm>\n      <CTable align=\"middle\" class=\"mb-0 border\" hover responsive>\n        <CTableHead color=\"light\">\n          <CTableRow>\n            <CTableHeaderCell class=\"text-center\">\n              <CIcon name=\"cil-basket\" />訂單編號\n            </CTableHeaderCell>\n            <CTableHeaderCell class=\"text-center\">訂單內容</CTableHeaderCell>\n            <CTableHeaderCell class=\"text-center\">價錢</CTableHeaderCell>\n            <CTableHeaderCell class=\"text-center\">時間</CTableHeaderCell>\n            <CTableHeaderCell>狀態</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          <CTableRow v-for=\"item in list\" :key=\"item.name\">\n            <CTableDataCell class=\"text-center\">\n              {{ item.id }}\n            </CTableDataCell>\n            <CTableDataCell class=\"text-center\">\n              <template v-for=\"dish in JSON.parse(item.content)\">\n                {{ dish.name }} x {{ dish.num }} &nbsp;\n              </template>\n              <!-- <div>{{ item.content }}</div> -->\n            </CTableDataCell>\n            <CTableDataCell class=\"text-center\">\n              <div class=\"clearfix\">\n                <div>\n                  {{ item.totalPrice }}\n                </div>\n              </div>\n            </CTableDataCell>\n            <CTableDataCell class=\"text-center\">\n              {{ item.ctime }}\n            </CTableDataCell>\n            <CTableDataCell>\n              <div>已結帳</div>\n            </CTableDataCell>\n          </CTableRow>\n          <CTableRow> </CTableRow>\n        </CTableBody> </CTable\n    ></CForm>\n    <CPagination aria-label=\"Page navigation example\" v-if=\"list !== null\">\n      <CPaginationItem\n        aria-label=\"Previous\"\n        :disabled=\"page == 1\"\n        @click=\"currentPage > 1 && search(1)\"\n        ><span aria-hidden=\"true\">&laquo;</span></CPaginationItem\n      >\n      <CPaginationItem\n        aria-label=\"Previous\"\n        :disabled=\"currentPage == 1\"\n        @click=\"currentPage > 1 && search(--currentPage)\"\n        ><span aria-hidden=\"true\">&#60;</span></CPaginationItem\n      >\n      <CPaginationItem active>{{ currentPage }}</CPaginationItem>\n      <CPaginationItem\n        aria-label=\"Previous\"\n        :disabled=\"currentPage < totalPage\"\n        @click=\"search(++currentPage)\"\n        ><span aria-hidden=\"true\">&#62;</span></CPaginationItem\n      >\n      <CPaginationItem\n        aria-label=\"Next\"\n        :disabled=\"currentPage == totalPage\"\n        @click=\"search(totalPage)\"\n        ><span aria-hidden=\"true\">&raquo;</span></CPaginationItem\n      >\n    </CPagination>\n  </div>\n</template>\n<script setup>\nimport { api } from '../apiRequset.js'\nimport { ref } from 'vue'\nconst list = ref(null)\nconst currentPage = ref(1)\nconst totalPage = ref(0)\nconst size = ref(5)\nsearch(currentPage.value)\nfunction search(page) {\n  currentPage.value = page\n  api\n    .getHistory({ page: currentPage.value, size: size.value })\n    .then((response) => {\n      list.value = response.data.data\n      currentPage.value = response.data.page\n      totalPage.value = response.data.toatl / size.value\n    })\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}