{"ast":null,"code":"import axios from 'axios';\naxios.defaults.timeout = 5000; // axios.defaults.baseURL = process.env.API_ROOT; // 域名\n\naxios.defaults.baseURL = 'https://system-to-order.herokuapp.com'; // 域名\n\nconst cros = 'https://system-to-order.herokuapp.com'; // http request 欄截\n\naxios.interceptors.request.use(config => {\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    // 如果沒有cors的問題則可以都不加\n    'Access-Control-Allow-Origin': cros,\n    'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n    'Access-Control-Max-Age': '86400',\n    'Content-Type': 'application/json'\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // 異常處理\n\naxios.interceptors.response.use(response => {\n  return response;\n}, err => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 404:\n        console.log('找不到該頁面');\n        break;\n\n      case 500:\n        console.log('伺服器出錯');\n        break;\n\n      case 503:\n        console.log('服務失效');\n        break;\n\n      default:\n        console.log(`連接錯誤${err.response.status}`);\n    }\n  } else {\n    console.log('連接到服務器失敗');\n  }\n\n  return Promise.resolve(err.response);\n});\nexport function fetch(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    console.log(url);\n    axios.get(url, {\n      params: params\n    }).then(response => {\n      resolve(response);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\nexport function post(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}\nexport function remove(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.delete(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}\nexport function put(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n} // 將封裝的方法打包起來\n\nexport const api = {\n  fetch: function (paramObj) {\n    return fetch('api/users', paramObj);\n  },\n  post: function (paramObj) {\n    return post('api/users', paramObj);\n  },\n  put: function (paramObj) {\n    return put('api/users', paramObj);\n  },\n  delete: function (paramObj) {\n    return remove('api/users', paramObj);\n  },\n  getHistory: async function (paramObj) {\n    return await fetch('/admin/getOrderHistory', paramObj);\n  },\n  changeOrderStatus: async function (paramObj) {\n    return await post('/admin/changeStatus', paramObj);\n  },\n  getCurrentOrder: async function (paramObj) {\n    return await fetch('/admin/getCurrentOrder', paramObj);\n  }\n};","map":{"version":3,"names":["axios","defaults","timeout","baseURL","cros","interceptors","request","use","config","data","JSON","stringify","headers","error","Promise","reject","response","err","status","console","log","resolve","fetch","url","params","get","then","catch","post","remove","delete","put","api","paramObj","getHistory","changeOrderStatus","getCurrentOrder"],"sources":["C:/Users/user/Documents/GitHub/adminPage/src/apiRequset.js"],"sourcesContent":["import axios from 'axios'\n\naxios.defaults.timeout = 5000\n// axios.defaults.baseURL = process.env.API_ROOT; // 域名\n\naxios.defaults.baseURL = 'https://system-to-order.herokuapp.com' // 域名\n\nconst cros = 'https://system-to-order.herokuapp.com'\n\n// http request 欄截\naxios.interceptors.request.use(\n  (config) => {\n    config.data = JSON.stringify(config.data)\n    config.headers = {\n      // 如果沒有cors的問題則可以都不加\n      'Access-Control-Allow-Origin': cros,\n      'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n      'Access-Control-Max-Age': '86400',\n      'Content-Type': 'application/json',\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// 異常處理\naxios.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (err) => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 404:\n          console.log('找不到該頁面')\n          break\n        case 500:\n          console.log('伺服器出錯')\n          break\n        case 503:\n          console.log('服務失效')\n          break\n        default:\n          console.log(`連接錯誤${err.response.status}`)\n      }\n    } else {\n      console.log('連接到服務器失敗')\n    }\n    return Promise.resolve(err.response)\n  },\n)\n\nexport function fetch(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    console.log(url)\n    axios\n      .get(url, {\n        params: params,\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(err)\n      })\n  })\n}\n\nexport function post(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data).then(\n      (response) => {\n        resolve(response.data)\n      },\n      (err) => {\n        reject(err)\n      },\n    )\n  })\n}\n\nexport function remove(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.delete(url, data).then(\n      (response) => {\n        resolve(response.data)\n      },\n      (err) => {\n        reject(err)\n      },\n    )\n  })\n}\n\nexport function put(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(\n      (response) => {\n        resolve(response.data)\n      },\n      (err) => {\n        reject(err)\n      },\n    )\n  })\n}\n// 將封裝的方法打包起來\nexport const api = {\n  fetch: function (paramObj) {\n    return fetch('api/users', paramObj)\n  },\n  post: function (paramObj) {\n    return post('api/users', paramObj)\n  },\n  put: function (paramObj) {\n    return put('api/users', paramObj)\n  },\n  delete: function (paramObj) {\n    return remove('api/users', paramObj)\n  },\n  getHistory: async function (paramObj) {\n    return await fetch('/admin/getOrderHistory', paramObj)\n  },\n  changeOrderStatus: async function (paramObj) {\n    return await post('/admin/changeStatus', paramObj)\n  },\n  getCurrentOrder: async function (paramObj) {\n    return await fetch('/admin/getCurrentOrder', paramObj)\n  },\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}