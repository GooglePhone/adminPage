{"ast":null,"code":"import { store } from \"./store\";\nimport SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from \"webstomp-client\"; // const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\n\nconst websocketUrl = `ws://127.0.0.1:8080/`;\nexport const websocket = {\n  data() {\n    return {\n      ws: null\n    };\n  },\n\n  created() {\n    //頁面剛進入時開啟長連線\n    this.methods.initWebsocket();\n  },\n\n  destroyed: function () {\n    //頁面銷燬時關閉長連線\n    this.websocketclose();\n  },\n  methods: {\n    //初始websocket\n    initWebsocket() {\n      this.socket = new SockJS(\"http://localhost:8080/ws\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect( // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n      header => {}, frame => {\n        console.log(123);\n        this.stompClient.subscribe('/topic/bind', function (data) {\n          console.log(data);\n        });\n        this.stompClient.subscribe('/user/client/bind', function (data) {\n          console.log(data);\n        });\n        this.stompClient.send(\"/app/testMsg\", {}, JSON.stringify({\n          'clientId': \"jjj\"\n        })); //   this.connectSucceed()\n      }, err => {\n        this.initWebsocket; // 连接失败的回调\n\n        console.log(456); //   this.reconnect(this.socketUrl, this.connectSucceed)\n      });\n    },\n\n    websocketonopen() {\n      console.log('ws 連線成功~~');\n    },\n\n    websocketonerror(e) {\n      console.error('ws 連線失敗', e);\n    },\n\n    websocketonmessage(e) {\n      console.log(e.data);\n      store.currentOrder.push(e.data);\n      return e;\n    },\n\n    websocketsend(data, topic = \"/submitOrder\") {\n      this.stompClient.send(\"/app\" + topic, data); //前端丟資料\n\n      console.log('send data', data);\n    },\n\n    websocketclose() {\n      console.log('ws 關閉連線');\n    }\n\n  }\n};","map":{"version":3,"names":["store","SockJS","Stomp","websocketUrl","websocket","data","ws","created","methods","initWebsocket","destroyed","websocketclose","socket","stompClient","over","connect","header","frame","console","log","subscribe","send","JSON","stringify","err","websocketonopen","websocketonerror","e","error","websocketonmessage","currentOrder","push","websocketsend","topic"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/websocket.js"],"sourcesContent":["import { store } from \"./store\";\nimport SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from \"webstomp-client\";\n// const websocketUrl = `wss://demo.piesocket.com/v3/channel_1?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self`;\nconst websocketUrl = `ws://127.0.0.1:8080/`\nexport const websocket = {\n    data(){\n        return{\n            ws: null,\n        }\n    },\n    created(){\n       //頁面剛進入時開啟長連線\n       this.methods.initWebsocket()\n   },\n   destroyed: function() {\n   //頁面銷燬時關閉長連線\n      this.websocketclose();\n    },\n    methods:{\n        //初始websocket\n        initWebsocket(){\n            this.socket = new SockJS(\"http://localhost:8080/ws\");\n            this.stompClient = Stomp.over(this.socket);\n            this.stompClient.connect(// headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n                header => {},\n                frame => {\n                  console.log(123)\n                this.stompClient.subscribe('/topic/bind', function (data) {\n                    console.log(data);\n                });\n                this.stompClient.subscribe('/user/client/bind', function (data) {\n                    console.log(data);\n                });\n                this.stompClient.send(\"/app/testMsg\", {}, JSON.stringify({'clientId': \"jjj\"}));\n                //   this.connectSucceed()\n                }, err => {\n                    this.initWebsocket\n                  // 连接失败的回调\n                  console.log(456)\n                //   this.reconnect(this.socketUrl, this.connectSucceed)\n                });\n        },\n        websocketonopen(){\n            console.log('ws 連線成功~~');\n        },\n        websocketonerror(e){\n            console.error('ws 連線失敗',e);\n        },\n        websocketonmessage(e){\n          console.log(e.data)\n          store.currentOrder.push(e.data)\n            return e\n          \n        },\n        websocketsend(data,topic = \"/submitOrder\"){\n            this.stompClient.send(\"/app\"+topic,data);\n            //前端丟資料\n            console.log('send data',data);\n        },\n        websocketclose(){\n            console.log('ws 關閉連線')\n        }\n    }\n}"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;;AACA,MAAMC,YAAY,GAAI,sBAAtB;AACA,OAAO,MAAMC,SAAS,GAAG;EACrBC,IAAI,GAAE;IACF,OAAM;MACFC,EAAE,EAAE;IADF,CAAN;EAGH,CALoB;;EAMrBC,OAAO,GAAE;IACN;IACA,KAAKC,OAAL,CAAaC,aAAb;EACH,CATqB;;EAUtBC,SAAS,EAAE,YAAW;IACtB;IACG,KAAKC,cAAL;EACD,CAboB;EAcrBH,OAAO,EAAC;IACJ;IACAC,aAAa,GAAE;MACX,KAAKG,MAAL,GAAc,IAAIX,MAAJ,CAAW,0BAAX,CAAd;MACA,KAAKY,WAAL,GAAmBX,KAAK,CAACY,IAAN,CAAW,KAAKF,MAAhB,CAAnB;MACA,KAAKC,WAAL,CAAiBE,OAAjB,EAAyB;MACrBC,MAAM,IAAI,CAAE,CADhB,EAEIC,KAAK,IAAI;QACPC,OAAO,CAACC,GAAR,CAAY,GAAZ;QACF,KAAKN,WAAL,CAAiBO,SAAjB,CAA2B,aAA3B,EAA0C,UAAUf,IAAV,EAAgB;UACtDa,OAAO,CAACC,GAAR,CAAYd,IAAZ;QACH,CAFD;QAGA,KAAKQ,WAAL,CAAiBO,SAAjB,CAA2B,mBAA3B,EAAgD,UAAUf,IAAV,EAAgB;UAC5Da,OAAO,CAACC,GAAR,CAAYd,IAAZ;QACH,CAFD;QAGA,KAAKQ,WAAL,CAAiBQ,IAAjB,CAAsB,cAAtB,EAAsC,EAAtC,EAA0CC,IAAI,CAACC,SAAL,CAAe;UAAC,YAAY;QAAb,CAAf,CAA1C,EARS,CAST;MACC,CAZL,EAYOC,GAAG,IAAI;QACN,KAAKf,aAAL,CADM,CAER;;QACAS,OAAO,CAACC,GAAR,CAAY,GAAZ,EAHQ,CAIV;MACC,CAjBL;IAkBH,CAvBG;;IAwBJM,eAAe,GAAE;MACbP,OAAO,CAACC,GAAR,CAAY,WAAZ;IACH,CA1BG;;IA2BJO,gBAAgB,CAACC,CAAD,EAAG;MACfT,OAAO,CAACU,KAAR,CAAc,SAAd,EAAwBD,CAAxB;IACH,CA7BG;;IA8BJE,kBAAkB,CAACF,CAAD,EAAG;MACnBT,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACtB,IAAd;MACAL,KAAK,CAAC8B,YAAN,CAAmBC,IAAnB,CAAwBJ,CAAC,CAACtB,IAA1B;MACE,OAAOsB,CAAP;IAEH,CAnCG;;IAoCJK,aAAa,CAAC3B,IAAD,EAAM4B,KAAK,GAAG,cAAd,EAA6B;MACtC,KAAKpB,WAAL,CAAiBQ,IAAjB,CAAsB,SAAOY,KAA7B,EAAmC5B,IAAnC,EADsC,CAEtC;;MACAa,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBd,IAAxB;IACH,CAxCG;;IAyCJM,cAAc,GAAE;MACZO,OAAO,CAACC,GAAR,CAAY,SAAZ;IACH;;EA3CG;AAda,CAAlB"},"metadata":{},"sourceType":"module"}