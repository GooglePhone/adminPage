{"ast":null,"code":"import SockJS from 'sockjs-client/dist/sockjs.min.js';\nimport Stomp from 'webstomp-client';\nimport { wsStore } from './wsStore';\nimport { onMounted } from 'vue';\nconst app = {\n  setup() {\n    onBeforeMount(() => {\n      console.log('[beforeMounted]');\n      console.log('-------------');\n    });\n    onMounted(() => {\n      console.log('[onMounted]');\n      console.log('-------------');\n      const websocket = {\n        data() {\n          return {\n            ws: null\n          };\n        },\n\n        created() {\n          //頁面剛進入時開啟長連線\n          this.initWebsocket();\n        },\n\n        destroyed: function () {\n          //頁面銷燬時關閉長連線\n          this.websocketclose();\n        },\n        methods: {\n          //初始websocket\n          initWebsocket() {\n            this.socket = new SockJS('http://localhost:8080/ws');\n            this.stompClient = Stomp.over(this.socket);\n            this.stompClient.connect( // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n            header => {\n              header;\n            }, frame => {\n              websocket.data().ws = this;\n              console.log(frame);\n              this.stompClient.subscribe('/topic/bind', function (data) {\n                let orderList = [];\n\n                if (wsStore.currentOrder.value !== undefined) {\n                  orderList = wsStore.currentOrder.value.data;\n                }\n\n                const currentData = JSON.parse(data.body);\n                let exists = false;\n                orderList.forEach(element => {\n                  if (element.orderId === currentData.orderId) {\n                    element.data.concat(currentData.data);\n                    exists = true;\n                  }\n                });\n\n                if (!exists) {\n                  orderList.push(currentData);\n                }\n\n                wsStore.currentOrder.value = orderList;\n                console.log(wsStore.currentOrder.value); // console.log('ddd' + data)\n              });\n              this.stompClient.send('/app/testMsg', {}, JSON.stringify({\n                clientId: 'jjj'\n              })); //   this.connectSucceed()\n            }, err => {\n              this.initWebsocket; // 连接失败的回调\n\n              console.log(err); //   this.reconnect(this.socketUrl, this.connectSucceed)\n            });\n          }\n\n        }\n      };\n    });\n    return {\n      websocket\n    };\n  }\n\n};","map":{"version":3,"names":["SockJS","Stomp","wsStore","onMounted","app","setup","onBeforeMount","console","log","websocket","data","ws","created","initWebsocket","destroyed","websocketclose","methods","socket","stompClient","over","connect","header","frame","subscribe","orderList","currentOrder","value","undefined","currentData","JSON","parse","body","exists","forEach","element","orderId","concat","push","send","stringify","clientId","err"],"sources":["C:/Users/user/Desktop/admin/coreui-free-vue-admin-template-main/coreui-free-vue-admin-template-main/src/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client/dist/sockjs.min.js'\nimport Stomp from 'webstomp-client'\nimport { wsStore } from './wsStore'\nimport { onMounted } from 'vue'\nconst app = {\n  setup() {\n    onBeforeMount(() => {\n      console.log('[beforeMounted]')\n      console.log('-------------')\n    })\n    onMounted(() => {\n      console.log('[onMounted]')\n      console.log('-------------')\n\n      const websocket = {\n        data() {\n          return {\n            ws: null,\n          }\n        },\n        created() {\n          //頁面剛進入時開啟長連線\n          this.initWebsocket()\n        },\n        destroyed: function () {\n          //頁面銷燬時關閉長連線\n          this.websocketclose()\n        },\n        methods: {\n          //初始websocket\n          initWebsocket() {\n            this.socket = new SockJS('http://localhost:8080/ws')\n            this.stompClient = Stomp.over(this.socket)\n            this.stompClient.connect(\n              // headers头部信息。可添加客户端的认证信息。也可以不添加信息，headers 直接就设置为 {}\n              (header) => {\n                header\n              },\n              (frame) => {\n                websocket.data().ws = this\n                console.log(frame)\n                this.stompClient.subscribe('/topic/bind', function (data) {\n                  let orderList = []\n                  if (wsStore.currentOrder.value !== undefined) {\n                    orderList = wsStore.currentOrder.value.data\n                  }\n                  const currentData = JSON.parse(data.body)\n                  let exists = false\n                  orderList.forEach((element) => {\n                    if (element.orderId === currentData.orderId) {\n                      element.data.concat(currentData.data)\n                      exists = true\n                    }\n                  })\n                  if (!exists) {\n                    orderList.push(currentData)\n                  }\n                  wsStore.currentOrder.value = orderList\n                  console.log(wsStore.currentOrder.value)\n                  // console.log('ddd' + data)\n                })\n                this.stompClient.send(\n                  '/app/testMsg',\n                  {},\n                  JSON.stringify({ clientId: 'jjj' }),\n                )\n                //   this.connectSucceed()\n              },\n              (err) => {\n                this.initWebsocket\n                // 连接失败的回调\n                console.log(err)\n                //   this.reconnect(this.socketUrl, this.connectSucceed)\n              },\n            )\n          },\n        },\n      }\n    })\n    return { websocket }\n  },\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,MAAMC,GAAG,GAAG;EACVC,KAAK,GAAG;IACNC,aAAa,CAAC,MAAM;MAClBC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,eAAZ;IACD,CAHY,CAAb;IAIAL,SAAS,CAAC,MAAM;MACdI,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,eAAZ;MAEA,MAAMC,SAAS,GAAG;QAChBC,IAAI,GAAG;UACL,OAAO;YACLC,EAAE,EAAE;UADC,CAAP;QAGD,CALe;;QAMhBC,OAAO,GAAG;UACR;UACA,KAAKC,aAAL;QACD,CATe;;QAUhBC,SAAS,EAAE,YAAY;UACrB;UACA,KAAKC,cAAL;QACD,CAbe;QAchBC,OAAO,EAAE;UACP;UACAH,aAAa,GAAG;YACd,KAAKI,MAAL,GAAc,IAAIjB,MAAJ,CAAW,0BAAX,CAAd;YACA,KAAKkB,WAAL,GAAmBjB,KAAK,CAACkB,IAAN,CAAW,KAAKF,MAAhB,CAAnB;YACA,KAAKC,WAAL,CAAiBE,OAAjB,EACE;YACCC,MAAD,IAAY;cACVA,MAAM;YACP,CAJH,EAKGC,KAAD,IAAW;cACTb,SAAS,CAACC,IAAV,GAAiBC,EAAjB,GAAsB,IAAtB;cACAJ,OAAO,CAACC,GAAR,CAAYc,KAAZ;cACA,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2B,aAA3B,EAA0C,UAAUb,IAAV,EAAgB;gBACxD,IAAIc,SAAS,GAAG,EAAhB;;gBACA,IAAItB,OAAO,CAACuB,YAAR,CAAqBC,KAArB,KAA+BC,SAAnC,EAA8C;kBAC5CH,SAAS,GAAGtB,OAAO,CAACuB,YAAR,CAAqBC,KAArB,CAA2BhB,IAAvC;gBACD;;gBACD,MAAMkB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAACqB,IAAhB,CAApB;gBACA,IAAIC,MAAM,GAAG,KAAb;gBACAR,SAAS,CAACS,OAAV,CAAmBC,OAAD,IAAa;kBAC7B,IAAIA,OAAO,CAACC,OAAR,KAAoBP,WAAW,CAACO,OAApC,EAA6C;oBAC3CD,OAAO,CAACxB,IAAR,CAAa0B,MAAb,CAAoBR,WAAW,CAAClB,IAAhC;oBACAsB,MAAM,GAAG,IAAT;kBACD;gBACF,CALD;;gBAMA,IAAI,CAACA,MAAL,EAAa;kBACXR,SAAS,CAACa,IAAV,CAAeT,WAAf;gBACD;;gBACD1B,OAAO,CAACuB,YAAR,CAAqBC,KAArB,GAA6BF,SAA7B;gBACAjB,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACuB,YAAR,CAAqBC,KAAjC,EAjBwD,CAkBxD;cACD,CAnBD;cAoBA,KAAKR,WAAL,CAAiBoB,IAAjB,CACE,cADF,EAEE,EAFF,EAGET,IAAI,CAACU,SAAL,CAAe;gBAAEC,QAAQ,EAAE;cAAZ,CAAf,CAHF,EAvBS,CA4BT;YACD,CAlCH,EAmCGC,GAAD,IAAS;cACP,KAAK5B,aAAL,CADO,CAEP;;cACAN,OAAO,CAACC,GAAR,CAAYiC,GAAZ,EAHO,CAIP;YACD,CAxCH;UA0CD;;QA/CM;MAdO,CAAlB;IAgED,CApEQ,CAAT;IAqEA,OAAO;MAAEhC;IAAF,CAAP;EACD;;AA5ES,CAAZ"},"metadata":{},"sourceType":"module"}